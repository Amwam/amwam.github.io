{"pageProps":{"POST":"*UPDATE 5th August 2024*: An updated version of this post, using React Hooks is available at: [https://amwam.me/blog/preventing-double-clicks-in-react-with-hooks](https://amwam.me/blog/preventing-double-clicks-in-react-with-hooks)\n--- \nMost of the time in React you will pass an onClick handler to a button, and whenever that button is click, expect that function to be called.\n\n```javascript\n<button onClick={() => console.log(\"I was called\")}>Click me</button>\n```\n\nThis `onClick` will get called, every time the button is clicked.\nSometimes this function might call an endpoint, and in some cases, you may not want that endpoint to run multiple times.\n\nTo get around this, you can use state to detect if the button was clicked, disable the button from being clicked further, then perform our action.\nThe steps would be:\n\n1. Click the button\n2. Set the state of the component to track the button click\n3. Update the button (re-render) to disable it, and prevent further clicking\n4. Perform our action (using `componentDidUpdate`)\n5. Restore the button state, once the action is complete\n\n## Example:\n\nBelow is a custom component that handles doubleclicking of buttons. All of its props are passed down to the HTML `button` element, except the `onClick` handler, which we will wrap with our custom logic.\n\n```javascript\nimport React from \"react\";\n\nclass PreventDoubleClickButton extends React.component {\n  constructor(props) {\n    super(props);\n    this.state = { clicked: false };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(event) {\n    this.setState({ clicked: true });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If we previously weren't clicked, and then updated to be clicked, we want to run our click handler;\n    if (!prevState.clicked && this.state.clicked) {\n      // Here we expect the onClick function passed down, to return a Promise, once complete\n      this.props.onClick().then(() => {\n        this.setState({ clicked: true });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <button {...this.props} onClick={this.onClick}>\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\n// Usage\n\nfunction handleClick() {\n  return fetch(\"./myData.json\").then(() => {\n    this.setState({ data: \"Got it!\" });\n  });\n}\n\n<PreventDoubleClickButton className=\"myButton\" onClick={this.handleClick}>\n  Click me\n</PreventDoubleClickButton>;\n```\n"},"__N_SSG":true}